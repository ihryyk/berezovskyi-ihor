Index: HW_3/src/main/java/com/sprinng/hw_3/controller/dto/UserDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.controller.dto;\r\n\r\n\r\nimport com.sprinng.hw_3.model.entity.Role;\r\nimport com.sprinng.hw_3.model.enums.LockStatus;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n@Builder\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class UserDTO {\r\n\r\n    public long id;\r\n\r\n    public String name;\r\n\r\n    public String emailAddress;\r\n\r\n    public String password;\r\n\r\n    public Role role;\r\n\r\n    public LockStatus lockStatus;\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/UserDTO.java b/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/UserDTO.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/UserDTO.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/UserDTO.java	
@@ -25,6 +25,4 @@
     public Role role;
 
     public LockStatus lockStatus;
-
-
 }
Index: HW_3/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.7.1</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>com.example</groupId>\r\n    <artifactId>HW_3</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>HW_3</name>\r\n    <description>HW_3</description>\r\n    <properties>\r\n        <java.version>17</java.version>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mapstruct</groupId>\r\n            <artifactId>mapstruct</artifactId>\r\n            <version>1.4.2.Final</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <configuration>\r\n                    <excludes>\r\n                        <exclude>\r\n                            <groupId>org.projectlombok</groupId>\r\n                            <artifactId>lombok</artifactId>\r\n                        </exclude>\r\n                    </excludes>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
===================================================================
diff --git a/HW_3/pom.xml b/HW_3/pom.xml
--- a/HW_3/pom.xml	
+++ b/HW_3/pom.xml	
@@ -21,7 +21,6 @@
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-web</artifactId>
         </dependency>
-
         <dependency>
             <groupId>org.projectlombok</groupId>
             <artifactId>lombok</artifactId>
Index: HW_3/src/main/java/com/sprinng/hw_3/controller/dto/PassDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.controller.dto;\r\n\r\n\r\nimport com.sprinng.hw_3.model.enums.PassStatus;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.sql.Date;\r\n\r\n@Builder\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class PassDTO {\r\n\r\n    public long id;\r\n\r\n    public Date startDate;\r\n\r\n    public Date endDate;\r\n\r\n    public PassStatus passStatus;\r\n\r\n    public int penalty;\r\n\r\n    public OrderDTO order;\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/PassDTO.java b/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/PassDTO.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/PassDTO.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/PassDTO.java	
@@ -26,6 +26,4 @@
     public int penalty;
 
     public OrderDTO order;
-
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/controller/dto/BookDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.controller.dto;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n\r\n@Builder\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n\r\npublic class BookDTO {\r\n\r\n    public long id;\r\n\r\n    public int year;\r\n\r\n    public String title;\r\n\r\n    public String author;\r\n\r\n    public String publishingHouse;\r\n\r\n    public int number;\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/BookDTO.java b/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/BookDTO.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/BookDTO.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/BookDTO.java	
@@ -24,5 +24,4 @@
     public String publishingHouse;
 
     public int number;
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/model/entity/Order.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.model.entity;\r\n\r\n\r\nimport com.sprinng.hw_3.model.enums.BookOption;\r\nimport com.sprinng.hw_3.model.enums.OrderStatus;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.sql.Date;\r\nimport java.util.List;\r\n\r\n@Builder\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class Order {\r\n\r\n    private long id;\r\n\r\n    private User user;\r\n\r\n    private List<Book> orderBooks;\r\n\r\n    private BookOption bookOption;\r\n\r\n    private OrderStatus orderStatus;\r\n\r\n    private Date arrivalDate;\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Order.java b/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Order.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Order.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Order.java	
@@ -28,6 +28,4 @@
     private OrderStatus orderStatus;
 
     private Date arrivalDate;
-
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/model/entity/Book.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.model.entity;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n@Builder\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n\r\npublic class Book {\r\n\r\n    private long id;\r\n\r\n    private int year;\r\n\r\n    private String title;\r\n\r\n    private String author;\r\n\r\n    private String publishingHouse;\r\n\r\n    private int number;\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Book.java b/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Book.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Book.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Book.java	
@@ -23,5 +23,4 @@
     private String publishingHouse;
 
     private int number;
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/controller/dto/OrderDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.controller.dto;\r\n\r\n\r\nimport com.sprinng.hw_3.model.enums.BookOption;\r\nimport com.sprinng.hw_3.model.enums.OrderStatus;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.sql.Date;\r\nimport java.util.List;\r\n\r\n@Builder\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class OrderDTO {\r\n\r\n    public long id;\r\n\r\n    public UserDTO user;\r\n\r\n\r\n    public List<BookDTO> orderBooks;\r\n\r\n    public BookOption bookOption;\r\n\r\n    public OrderStatus orderStatus;\r\n\r\n    public Date arrivalDate;\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/OrderDTO.java b/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/OrderDTO.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/OrderDTO.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/controller/dto/OrderDTO.java	
@@ -21,7 +21,6 @@
 
     public UserDTO user;
 
-
     public List<BookDTO> orderBooks;
 
     public BookOption bookOption;
Index: HW_3/src/main/java/com/sprinng/hw_3/service/PassService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service;\r\n\r\n\r\nimport com.sprinng.hw_3.controller.dto.BookDTO;\r\nimport com.sprinng.hw_3.controller.dto.PassDTO;\r\nimport com.sprinng.hw_3.model.enums.PassStatus;\r\nimport com.sprinng.hw_3.service.exeption.ServiceException;\r\n\r\nimport java.util.List;\r\n\r\npublic interface PassService {\r\n    public void changePassStatus(long passId, PassStatus passStatus) throws ServiceException;\r\n\r\n    public List<BookDTO> getBooksById(long passId) throws ServiceException;\r\n\r\n    public void create(PassDTO passDTO) throws ServiceException;\r\n\r\n    public List<PassDTO> getAll() throws ServiceException;\r\n\r\n    public List<PassDTO> getAllByUserId(long userID) throws ServiceException;\r\n\r\n    public void update(PassDTO passDTO) throws ServiceException;\r\n\r\n    public void updatePenalty(long id, int penalty) throws ServiceException;\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/PassService.java b/HW_3/src/main/java/com/sprinng/hw_3/service/PassService.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/PassService.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/PassService.java	
@@ -22,5 +22,4 @@
     public void update(PassDTO passDTO) throws ServiceException;
 
     public void updatePenalty(long id, int penalty) throws ServiceException;
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/model/enums/LockStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.model.enums;\r\n\r\npublic enum LockStatus {\r\n    BLOCKED, UNLOCKED\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/model/enums/LockStatus.java b/HW_3/src/main/java/com/sprinng/hw_3/model/enums/LockStatus.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/model/enums/LockStatus.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/model/enums/LockStatus.java	
@@ -2,5 +2,4 @@
 
 public enum LockStatus {
     BLOCKED, UNLOCKED
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/service/repository/impl/BookRepositoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.repository.impl;\r\n\r\n\r\nimport com.sprinng.hw_3.model.entity.Book;\r\nimport com.sprinng.hw_3.service.exeption.RepositoryExeption;\r\nimport com.sprinng.hw_3.service.repository.BookRepository;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Repository;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\n\r\n@Slf4j\r\n@Service\r\n@RequiredArgsConstructor\r\n@Repository\r\npublic class BookRepositoryImpl implements BookRepository {\r\n\r\n\r\n    @Override\r\n    public Book getById(long bookId) throws RepositoryExeption {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public List<Book> getByAuthor(String author) throws RepositoryExeption {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public List<Book> getAll() throws RepositoryExeption {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public List<Book> getByTitle(String title) throws RepositoryExeption {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void changeNumber(long bookId, int newNumber) throws RepositoryExeption {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void update(Book updatedBook) throws RepositoryExeption {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void delete(long id) throws RepositoryExeption {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void add(Book book) throws RepositoryExeption {\r\n\r\n    }\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/repository/impl/BookRepositoryImpl.java b/HW_3/src/main/java/com/sprinng/hw_3/service/repository/impl/BookRepositoryImpl.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/repository/impl/BookRepositoryImpl.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/repository/impl/BookRepositoryImpl.java	
@@ -17,7 +17,6 @@
 @Repository
 public class BookRepositoryImpl implements BookRepository {
 
-
     @Override
     public Book getById(long bookId) throws RepositoryExeption {
         return null;
Index: HW_3/src/main/java/com/sprinng/hw_3/controller/PassController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.controller;\r\n\r\n\r\nimport com.sprinng.hw_3.controller.dto.BookDTO;\r\nimport com.sprinng.hw_3.controller.dto.PassDTO;\r\nimport com.sprinng.hw_3.model.enums.PassStatus;\r\nimport com.sprinng.hw_3.service.PassService;\r\nimport com.sprinng.hw_3.service.exeption.ServiceException;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController()\r\n@Slf4j\r\n@RequiredArgsConstructor\r\npublic class PassController {\r\n\r\n    private final PassService passService;\r\n\r\n    @ResponseStatus(HttpStatus.OK)\r\n    @GetMapping(value = \"/pass/\")\r\n    public List<PassDTO> getAllPasses() throws ServiceException {\r\n        log.info(\"get all passes\");\r\n        return passService.getAll();\r\n    }\r\n\r\n    @ResponseStatus(HttpStatus.OK)\r\n    @GetMapping(value = \"/pass/{userId}\")\r\n    public List<PassDTO> getPassesByUserId(@PathVariable long id) throws ServiceException {\r\n        log.info(\"get all passes by user id {}\", id);\r\n        return passService.getAllByUserId(id);\r\n    }\r\n\r\n    @ResponseStatus(HttpStatus.OK)\r\n    @GetMapping(value = \"/pass/{id}/books\")\r\n    public List<BookDTO> getBooksFromPassByPassId(@PathVariable long id) throws ServiceException {\r\n        log.info(\"get books from pass by pass id {}\", id);\r\n        return passService.getBooksById(id);\r\n    }\r\n\r\n    @ResponseStatus(HttpStatus.CREATED)\r\n    @PostMapping(value = \"/pass\")\r\n    public void createPass(@RequestBody PassDTO passDTO) throws ServiceException {\r\n        log.info(\"create new pass\");\r\n        passService.create(passDTO);\r\n    }\r\n\r\n    @ResponseStatus(HttpStatus.OK)\r\n    @PutMapping(value = \"/pass\")\r\n    public void updatePass(@RequestBody PassDTO passDTO) throws ServiceException {\r\n        log.info(\"update pass\");\r\n        passService.update(passDTO);\r\n    }\r\n\r\n    @ResponseStatus(HttpStatus.OK)\r\n    @PatchMapping(value = \"/pass/{id}\")\r\n    public void changePassStatus(@PathVariable long id, PassStatus passStatus) {\r\n        log.info(\"change pass status to {} in pass with id {}\", passStatus, id);\r\n        passService.changePassStatus(id, passStatus);\r\n    }\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/controller/PassController.java b/HW_3/src/main/java/com/sprinng/hw_3/controller/PassController.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/controller/PassController.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/controller/PassController.java	
@@ -17,7 +17,6 @@
 @Slf4j
 @RequiredArgsConstructor
 public class PassController {
-
     private final PassService passService;
 
     @ResponseStatus(HttpStatus.OK)
Index: HW_3/src/main/java/com/sprinng/hw_3/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.impl;\r\n\r\n\r\nimport com.sprinng.hw_3.controller.dto.UserDTO;\r\nimport com.sprinng.hw_3.controller.mapper.UserMapper;\r\nimport com.sprinng.hw_3.model.entity.User;\r\nimport com.sprinng.hw_3.service.UserService;\r\nimport com.sprinng.hw_3.service.exeption.RepositoryExeption;\r\nimport com.sprinng.hw_3.service.exeption.ServiceException;\r\nimport com.sprinng.hw_3.service.repository.UserRepository;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\n\r\nimport static java.lang.String.format;\r\n\r\n@Service\r\n@Slf4j\r\n@RequiredArgsConstructor\r\npublic class UserServiceImpl implements UserService {\r\n\r\n    private final UserRepository userRepository;\r\n\r\n    @Override\r\n    public void add(UserDTO userDTO) throws ServiceException {\r\n        log.info(\"add new user with email {}\", userDTO.getEmailAddress());\r\n        User user = UserMapper.INSTANCE.mapToEntity(userDTO);\r\n        userRepository.add(user);\r\n    }\r\n\r\n    @Override\r\n    public void update(UserDTO userDTO) throws ServiceException {\r\n        log.info(\"update user with email {}\", userDTO.getEmailAddress());\r\n        User user = UserMapper.INSTANCE.mapToEntity(userDTO);\r\n        userRepository.update(user);\r\n    }\r\n\r\n    @Override\r\n    public UserDTO getByEmailAndPassword(String email, String password) throws ServiceException {\r\n\r\n        User user = userRepository.getByEmailAndPassword(email, password);\r\n        if (user == null) {\r\n            throw new ServiceException(format(\"User with email %s and password %s not found\", email, password));\r\n        }\r\n        log.info(\"get user by email{} and password {}\", user.getEmailAddress(), user.getPassword());\r\n        return UserMapper.INSTANCE.mapToDto(user);\r\n    }\r\n\r\n    @Override\r\n    public UserDTO getByEmail(String email) throws ServiceException {\r\n        try {\r\n            User user = userRepository.getByEmail(email);\r\n            log.info(\"get user by email{}\", user.getEmailAddress());\r\n            if (user == null) {\r\n                throw new ServiceException(format(\"User with email %s not found\", email));\r\n            }\r\n            return UserMapper.INSTANCE.mapToDto(user);\r\n        } catch (RepositoryExeption exeption) {\r\n            throw new ServiceException();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public List<UserDTO> getAll() throws ServiceException {\r\n        log.info(\"get all users\");\r\n        return userRepository.getAll().stream().map(UserMapper.INSTANCE::mapToDto).toList();\r\n    }\r\n\r\n    @Override\r\n    public void changeLockStatus(long id, boolean lockStatus) throws ServiceException {\r\n        log.info(\"change lock status to {} in user with id {}\", lockStatus, id);\r\n        userRepository.changeLockStatus(id, lockStatus);\r\n    }\r\n\r\n    @Override\r\n    public void delete(String email) throws ServiceException {\r\n        log.info(\"delete User with email {}\", email);\r\n        userRepository.delete(email);\r\n    }\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/impl/UserServiceImpl.java b/HW_3/src/main/java/com/sprinng/hw_3/service/impl/UserServiceImpl.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/impl/UserServiceImpl.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/impl/UserServiceImpl.java	
@@ -20,7 +20,6 @@
 @Slf4j
 @RequiredArgsConstructor
 public class UserServiceImpl implements UserService {
-
     private final UserRepository userRepository;
 
     @Override
Index: HW_3/src/main/java/com/sprinng/hw_3/service/impl/PassServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.impl;\r\n\r\n\r\nimport com.sprinng.hw_3.controller.dto.BookDTO;\r\nimport com.sprinng.hw_3.controller.dto.PassDTO;\r\nimport com.sprinng.hw_3.controller.mapper.BookMapper;\r\nimport com.sprinng.hw_3.controller.mapper.PassMapper;\r\nimport com.sprinng.hw_3.model.entity.Pass;\r\nimport com.sprinng.hw_3.model.enums.PassStatus;\r\nimport com.sprinng.hw_3.service.PassService;\r\nimport com.sprinng.hw_3.service.exeption.ServiceException;\r\nimport com.sprinng.hw_3.service.repository.PassRepository;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\n@Slf4j\r\n@RequiredArgsConstructor\r\npublic class PassServiceImpl implements PassService {\r\n\r\n    private final PassRepository passRepository;\r\n\r\n    @Override\r\n    public void changePassStatus(long id, PassStatus passStatus) throws ServiceException {\r\n        log.info(\"change pass status to {} in pass with id {}\", passStatus, id);\r\n        passRepository.changePassStatus(id, passStatus);\r\n    }\r\n\r\n    @Override\r\n    public List<BookDTO> getBooksById(long id) throws ServiceException {\r\n        log.info(\"get books from pass by pass id {}\", id);\r\n        return passRepository.getBooksById(id).stream().map(BookMapper.INSTANCE::mapToDto).toList();\r\n    }\r\n\r\n    @Override\r\n    public void create(PassDTO passDTO) throws ServiceException {\r\n        log.info(\"create new pass\");\r\n        Pass pass = PassMapper.INSTANCE.mapToEntity(passDTO);\r\n        passRepository.create(pass);\r\n    }\r\n\r\n    @Override\r\n    public List<PassDTO> getAll() throws ServiceException {\r\n        log.info(\"get all passes\");\r\n        return passRepository.getAll().stream().map(PassMapper.INSTANCE::mapToDto).toList();\r\n    }\r\n\r\n    @Override\r\n    public List<PassDTO> getAllByUserId(long userID) throws ServiceException {\r\n        log.info(\"get all passes by user id {}\", userID);\r\n        return passRepository.getAllByUserId(userID).stream().map(PassMapper.INSTANCE::mapToDto).toList();\r\n    }\r\n\r\n    @Override\r\n    public void update(PassDTO passDTO) throws ServiceException {\r\n        log.info(\"update pass\");\r\n        Pass pass = PassMapper.INSTANCE.mapToEntity(passDTO);\r\n        passRepository.update(pass);\r\n    }\r\n\r\n    @Override\r\n    public void updatePenalty(long id, int penalty) throws ServiceException {\r\n        log.info(\"update penalty to {} in pass with id {}\", penalty, id);\r\n        passRepository.updatePenalty(id, penalty);\r\n    }\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/impl/PassServiceImpl.java b/HW_3/src/main/java/com/sprinng/hw_3/service/impl/PassServiceImpl.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/impl/PassServiceImpl.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/impl/PassServiceImpl.java	
@@ -20,7 +20,6 @@
 @Slf4j
 @RequiredArgsConstructor
 public class PassServiceImpl implements PassService {
-
     private final PassRepository passRepository;
 
     @Override
Index: HW_3/src/main/java/com/sprinng/hw_3/service/impl/OrderServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.impl;\r\n\r\n\r\nimport com.sprinng.hw_3.controller.dto.OrderDTO;\r\nimport com.sprinng.hw_3.controller.mapper.OrderMapper;\r\nimport com.sprinng.hw_3.model.entity.Order;\r\nimport com.sprinng.hw_3.model.enums.OrderStatus;\r\nimport com.sprinng.hw_3.service.OrderService;\r\nimport com.sprinng.hw_3.service.exeption.ServiceException;\r\nimport com.sprinng.hw_3.service.repository.OrderRepository;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\n\r\nimport static java.lang.String.format;\r\n\r\n@Service\r\n@Slf4j\r\n@RequiredArgsConstructor\r\npublic class OrderServiceImpl implements OrderService {\r\n\r\n    private final OrderRepository orderRepository;\r\n\r\n    @Override\r\n    public void update(OrderDTO orderDTO) {\r\n        Order order = OrderMapper.INSTANCE.mapToEntity(orderDTO);\r\n        orderRepository.update(order);\r\n        log.info(\"update order\");\r\n    }\r\n\r\n    @Override\r\n    public List<OrderDTO> getAllByUserId(long userId) throws ServiceException {\r\n        log.info(\"get all orders by user id {}\", userId);\r\n        return orderRepository.getAllByUserId(userId).stream().map(OrderMapper.INSTANCE::mapToDto).toList();\r\n    }\r\n\r\n    @Override\r\n    public OrderDTO getById(long id) throws ServiceException {\r\n        Order order = orderRepository.getById(id);\r\n\r\n        if (order == null) {\r\n            throw new ServiceException(format(\"ORDER with id %o not found\", id));\r\n        }\r\n        log.info(\"get order by id {}\", id);\r\n        return OrderMapper.INSTANCE.mapToDto(order);\r\n    }\r\n\r\n    @Override\r\n    public List<OrderDTO> getAll() throws ServiceException {\r\n        log.info(\"get all orders \");\r\n        return orderRepository.getAll().stream().map(OrderMapper.INSTANCE::mapToDto).toList();\r\n    }\r\n\r\n    @Override\r\n    public void create(OrderDTO orderDTO) throws ServiceException {\r\n        log.info(\"create new order\");\r\n        Order order = OrderMapper.INSTANCE.mapToEntity(orderDTO);\r\n        orderRepository.create(order);\r\n    }\r\n\r\n    @Override\r\n    public void changeOrderStatus(long id, OrderStatus orderStatus) throws ServiceException {\r\n        log.info(\"change order status to {} in order with id {}\", orderStatus, id);\r\n        orderRepository.changeOrderStatus(id, orderStatus);\r\n    }\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/impl/OrderServiceImpl.java b/HW_3/src/main/java/com/sprinng/hw_3/service/impl/OrderServiceImpl.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/impl/OrderServiceImpl.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/impl/OrderServiceImpl.java	
@@ -20,7 +20,6 @@
 @Slf4j
 @RequiredArgsConstructor
 public class OrderServiceImpl implements OrderService {
-
     private final OrderRepository orderRepository;
 
     @Override
Index: HW_3/src/main/java/com/sprinng/hw_3/service/impl/LibrarianServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.impl;\r\n\r\n\r\nimport com.sprinng.hw_3.controller.dto.UserDTO;\r\nimport com.sprinng.hw_3.controller.mapper.UserMapper;\r\nimport com.sprinng.hw_3.model.entity.User;\r\nimport com.sprinng.hw_3.service.LibrarianService;\r\nimport com.sprinng.hw_3.service.exeption.ServiceException;\r\nimport com.sprinng.hw_3.service.repository.LibrarianRepository;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\n@Slf4j\r\n@RequiredArgsConstructor\r\npublic class LibrarianServiceImpl implements LibrarianService {\r\n\r\n    private final LibrarianRepository librarianRepository;\r\n\r\n    @Override\r\n    public void create(UserDTO librarianDTO) throws ServiceException {\r\n        User librarian = UserMapper.INSTANCE.mapToEntity(librarianDTO);\r\n        librarianRepository.create(librarian);\r\n        log.info(\"create librarian with email {}\", librarian.getEmailAddress());\r\n    }\r\n\r\n    @Override\r\n    public List<UserDTO> getAll() throws ServiceException {\r\n        log.info(\"get all librarians\");\r\n        return librarianRepository.getAll().stream().map(UserMapper.INSTANCE::mapToDto).toList();\r\n    }\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/impl/LibrarianServiceImpl.java b/HW_3/src/main/java/com/sprinng/hw_3/service/impl/LibrarianServiceImpl.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/impl/LibrarianServiceImpl.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/impl/LibrarianServiceImpl.java	
@@ -17,7 +17,6 @@
 @Slf4j
 @RequiredArgsConstructor
 public class LibrarianServiceImpl implements LibrarianService {
-
     private final LibrarianRepository librarianRepository;
 
     @Override
Index: HW_3/src/main/java/com/sprinng/hw_3/model/entity/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.model.entity;\r\n\r\n\r\nimport com.sprinng.hw_3.model.enums.LockStatus;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\n@Builder\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class User {\r\n\r\n    private long id;\r\n\r\n    private String name;\r\n\r\n    private String emailAddress;\r\n\r\n    private String password;\r\n\r\n    private Role role;\r\n\r\n    private LockStatus lockStatus;\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/model/entity/User.java b/HW_3/src/main/java/com/sprinng/hw_3/model/entity/User.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/model/entity/User.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/model/entity/User.java	
@@ -24,6 +24,4 @@
     private Role role;
 
     private LockStatus lockStatus;
-
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/model/entity/Pass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.model.entity;\r\n\r\n\r\nimport com.sprinng.hw_3.model.enums.PassStatus;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.sql.Date;\r\n\r\n@Builder\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class Pass {\r\n\r\n    private long id;\r\n\r\n    private Date startDate;\r\n\r\n    private Date endDate;\r\n\r\n    private PassStatus passStatus;\r\n\r\n    private int penalty;\r\n\r\n    private Order order;\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Pass.java b/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Pass.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Pass.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/model/entity/Pass.java	
@@ -26,6 +26,4 @@
     private int penalty;
 
     private Order order;
-
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/service/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.repository;\r\n\r\n\r\nimport com.sprinng.hw_3.model.entity.User;\r\nimport com.sprinng.hw_3.service.exeption.RepositoryExeption;\r\n\r\nimport java.util.List;\r\n\r\npublic interface UserRepository {\r\n\r\n    public void add(User user) throws RepositoryExeption;\r\n\r\n    public void update(User user) throws RepositoryExeption;\r\n\r\n    public User getByEmailAndPassword(String email, String password) throws RepositoryExeption;\r\n\r\n    public User getByEmail(String email) throws RepositoryExeption;\r\n\r\n    public List<User> getAll() throws RepositoryExeption;\r\n\r\n    public void changeLockStatus(long userId, boolean lockStatus) throws RepositoryExeption;\r\n\r\n    public void delete(String email) throws RepositoryExeption;\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/repository/UserRepository.java b/HW_3/src/main/java/com/sprinng/hw_3/service/repository/UserRepository.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/repository/UserRepository.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/repository/UserRepository.java	
@@ -7,7 +7,6 @@
 import java.util.List;
 
 public interface UserRepository {
-
     public void add(User user) throws RepositoryExeption;
 
     public void update(User user) throws RepositoryExeption;
Index: HW_3/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>HELP.md\r\ntarget/\r\n!.mvn/wrapper/maven-wrapper.jar\r\n!**/src/main/**/target/\r\n!**/src/test/**/target/\r\n\r\n### STS ###\r\n.apt_generated\r\n.classpath\r\n.factorypath\r\n.project\r\n.settings\r\n.springBeans\r\n.sts4-cache\r\n\r\n### IntelliJ IDEA ###\r\n.idea\r\n*.iws\r\n*.iml\r\n*.ipr\r\n\r\n### NetBeans ###\r\n/nbproject/private/\r\n/nbbuild/\r\n/dist/\r\n/nbdist/\r\n/.nb-gradle/\r\nbuild/\r\n!**/src/main/**/build/\r\n!**/src/test/**/build/\r\n\r\n### VS Code ###\r\n.vscode/\r\n
===================================================================
diff --git a/HW_3/.gitignore b/HW_3/.gitignore
--- a/HW_3/.gitignore	
+++ b/HW_3/.gitignore	
@@ -1,33 +1,85 @@
-HELP.md
+##############################
+## Java
+##############################
+.mtj.tmp/
+*.class
+*.jar
+*.war
+*.ear
+*.nar
+hs_err_pid*
+
+##############################
+## Maven
+##############################
 target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
+pom.xml.tag
+pom.xml.releaseBackup
+pom.xml.versionsBackup
+pom.xml.next
+pom.xml.bak
+release.properties
+dependency-reduced-pom.xml
+buildNumber.properties
+.mvn/timing.properties
+.mvn/wrapper/maven-wrapper.jar
+
+##############################
+## Gradle
+##############################
+bin/
+build/
+.gradle
+.gradletasknamecache
+gradle-app.setting
+!gradle-wrapper.jar
 
-### STS ###
-.apt_generated
+##############################
+## IntelliJ
+##############################
+out/
+.idea/
+.idea_modules/
+*.iml
+*.ipr
+*.iws
+
+##############################
+## Eclipse
+##############################
+.settings/
+bin/
+tmp/
+.metadata
 .classpath
+.project
+*.tmp
+*.bak
+*.swp
+*~.nib
+local.properties
+.loadpath
 .factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
 
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
+##############################
+## NetBeans
+##############################
+nbproject/private/
 build/
-!**/src/main/**/build/
-!**/src/test/**/build/
+nbbuild/
+dist/
+nbdist/
+nbactions.xml
+nb-configuration.xml
 
-### VS Code ###
+##############################
+## Visual Studio Code
+##############################
 .vscode/
+.code-workspace
+
+##############################
+## OS X
+##############################
+.DS_Store
+
Index: HW_3/src/main/java/com/sprinng/hw_3/service/repository/OrderRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.repository;\r\n\r\n\r\nimport com.sprinng.hw_3.model.entity.Order;\r\nimport com.sprinng.hw_3.model.enums.OrderStatus;\r\nimport com.sprinng.hw_3.service.exeption.RepositoryExeption;\r\n\r\nimport java.util.List;\r\n\r\npublic interface OrderRepository {\r\n\r\n    public void update(Order order) throws RepositoryExeption;\r\n\r\n    public List<Order> getAllByUserId(long userID) throws RepositoryExeption;\r\n\r\n    public Order getById(long orderId) throws RepositoryExeption;\r\n\r\n    public List<Order> getAll() throws RepositoryExeption;\r\n\r\n    public void create(Order order) throws RepositoryExeption;\r\n\r\n    public void changeOrderStatus(long orderId, OrderStatus orderStatus) throws RepositoryExeption;\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/repository/OrderRepository.java b/HW_3/src/main/java/com/sprinng/hw_3/service/repository/OrderRepository.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/repository/OrderRepository.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/repository/OrderRepository.java	
@@ -8,7 +8,6 @@
 import java.util.List;
 
 public interface OrderRepository {
-
     public void update(Order order) throws RepositoryExeption;
 
     public List<Order> getAllByUserId(long userID) throws RepositoryExeption;
Index: HW_3/src/main/java/com/sprinng/hw_3/service/repository/BookRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.repository;\r\n\r\n\r\nimport com.sprinng.hw_3.model.entity.Book;\r\nimport com.sprinng.hw_3.service.exeption.RepositoryExeption;\r\n\r\nimport java.util.List;\r\n\r\npublic interface BookRepository {\r\n\r\n    public Book getById(long bookId) throws RepositoryExeption;\r\n\r\n    public List<Book> getByAuthor(String author) throws RepositoryExeption;\r\n\r\n    public List<Book> getAll() throws RepositoryExeption;\r\n\r\n    public List<Book> getByTitle(String title) throws RepositoryExeption;\r\n\r\n    public void changeNumber(long bookId, int newNumber) throws RepositoryExeption;\r\n\r\n    public void update(Book updatedBook) throws RepositoryExeption;\r\n\r\n    public void delete(long id) throws RepositoryExeption;\r\n\r\n    public void add(Book book) throws RepositoryExeption;\r\n\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/repository/BookRepository.java b/HW_3/src/main/java/com/sprinng/hw_3/service/repository/BookRepository.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/repository/BookRepository.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/repository/BookRepository.java	
@@ -7,7 +7,6 @@
 import java.util.List;
 
 public interface BookRepository {
-
     public Book getById(long bookId) throws RepositoryExeption;
 
     public List<Book> getByAuthor(String author) throws RepositoryExeption;
@@ -23,5 +22,4 @@
     public void delete(long id) throws RepositoryExeption;
 
     public void add(Book book) throws RepositoryExeption;
-
 }
Index: HW_3/src/main/java/com/sprinng/hw_3/service/exeption/ServiceException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.exeption;\r\n\r\npublic class ServiceException extends RuntimeException {\r\n\r\n    public ServiceException() {\r\n    }\r\n\r\n    public ServiceException(String message) {\r\n\r\n        super(message);\r\n    }\r\n\r\n\r\n    public ServiceException(String message, Throwable throwable) {\r\n\r\n        super(message, throwable);\r\n    }\r\n\r\n\r\n    public ServiceException(Throwable throwable) {\r\n\r\n        super(throwable);\r\n    }\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/exeption/ServiceException.java b/HW_3/src/main/java/com/sprinng/hw_3/service/exeption/ServiceException.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/exeption/ServiceException.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/exeption/ServiceException.java	
@@ -10,13 +10,11 @@
         super(message);
     }
 
-
     public ServiceException(String message, Throwable throwable) {
 
         super(message, throwable);
     }
 
-
     public ServiceException(Throwable throwable) {
 
         super(throwable);
Index: HW_3/src/main/java/com/sprinng/hw_3/service/exeption/RepositoryExeption.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sprinng.hw_3.service.exeption;\r\n\r\npublic class RepositoryExeption extends RuntimeException {\r\n    public RepositoryExeption(String message) {\r\n        super(message);\r\n    }\r\n}\r\n
===================================================================
diff --git a/HW_3/src/main/java/com/sprinng/hw_3/service/exeption/RepositoryExeption.java b/HW_3/src/main/java/com/sprinng/hw_3/service/exeption/RepositoryExeption.java
--- a/HW_3/src/main/java/com/sprinng/hw_3/service/exeption/RepositoryExeption.java	
+++ b/HW_3/src/main/java/com/sprinng/hw_3/service/exeption/RepositoryExeption.java	
@@ -1,6 +1,7 @@
 package com.sprinng.hw_3.service.exeption;
 
 public class RepositoryExeption extends RuntimeException {
+
     public RepositoryExeption(String message) {
         super(message);
     }
